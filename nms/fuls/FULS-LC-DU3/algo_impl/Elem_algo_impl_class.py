from Search_base_class import Search

# Elementary search algorithm class that extends the base class: 'Search'
class ElementarySearch(Search):

	def __init__(self):
		super().__init__("Elementary", "O(mn)")

	# Overriding the dummy function with the pure Elementary search algorithm
	# -> "dummy_arr" is just an empty array that is passed. In KMP and BM it is used as the preprocess array, so in order
	#    for all search algos to have the same search function, this pure_search function must take an empty arr, that will be 
	#    generated by the dummy preprocess function in the "Search" class.
	def pure_search(self, n, m, text, pattern, dummy_arr, index_list, pattern_count):
		for i in range(0, n-m+1):
			for j in range(0, m):
				if pattern[j] != text[i+j]:
					break
				elif j == m - 1:
					index_list.append(i)
					pattern_count += 1
		return index_list, pattern_count